---
  swagger: '2.0'
  info:
    version: 0.0.0
    title: Fiche de paie
    description: Une API calculant le décompte d'une fiche de paie à partir du descriptif d'une situation d'emploi spécifique.
    termsOfService: http://github.com/sgmap/paie-api#readme
    contact:
      name: Équipe Fiche de Paie Simplifiée
      email: paie@sgmap.fr
      url: http://github.com/sgmap/paie-api/issues
    license:
      name: AGPL
      url: https://www.gnu.org/licenses/agpl-3.0.html
  host: paie.sgmap.fr
  basePath: /api
  schemes:
    - http
  consumes:
    - application/json
  produces:
    - application/json
  paths:
    /net:
      get:
        summary: Calcule le salaire net en centimes d'un salarié.
        operationId: calculateNet
        produces:
          - application/json
        parameters:
          -
            name: brut
            in: query
            description: Salaire brut du salarié en centimes
            required: false
            type: integer
            minimum: 0
          -
            name: imposable
            in: query
            description: Salaire imposable du salarié en centimes
            required: false
            type: integer
            minimum: 0
        responses:
          200:
            description: Salaire net en centimes.
            schema:
              type: integer
              minimum: 0
            examples:
              application/json: '112043'
          400:
            description: Aucun salaire spécifié.
            schema:
              $ref: '#/definitions/validationError'
          409:
            description: |
              Les paramètres donnés sont conflictuels.
              Par exemple, vous avez spécifié à la fois brut et imposable.
            schema:
              $ref: '#/definitions/error'
          502:
            description: Le serveur OpenFisca a répondu par une erreur.
            schema:
              $ref: '#/definitions/openFiscaError'
          504:
            description: Le serveur OpenFisca a mis trop longtemps à repondre.
            schema:
              $ref: '#/definitions/timeoutError'
          default:
            description: unexpected error
            schema:
              $ref: '#/definitions/error'
  definitions:
    error:
      type: object
      properties:
        message:
          type: string
      required:
        - message
    validationError:
      type: object
      properties:
        statusCode:
          type: integer
          description: HTTP status code
        error:
          type: string
          description: HTTP error name
        message:
          type: string
          description: Human-readable validation error
        validation:
          type: object
          description: Location of validation error
          example: {"source":"query","keys":["brut"]}
      required:
        - message
    timeoutError:
      type: object
      properties:
        message:
          type: string
        timeout:
          type: integer
          format: int32
      required:
        - message
        - timeout
    openFiscaError:
      type: object
      properties:
        openFiscaError:
          type: object
        openFiscaRequest:
          type: object
      required:
        - openFiscaError
        - openFiscaRequest
